<?xml version="1.0" encoding="UTF-8"?>
<project name="Common Installation Routines" xmlns:ivy="antlib:org.apache.ivy.ant">

    <!-- =========================================================================================================== -->
    <target name="download-ivy" unless="ivy.available">
        <fail unless="lib.dir"/>
        <fail unless="ivy.version"/>
        <fail unless="ivy.source.domainname"/>
        <mkdir dir="${lib.dir}"/>
        <mkdir dir="${lib.dir}/ivy"/>
        <echo message="installing ivy..."/>
        <get src="http://${ivy.source.domainname}/ivy/ivy/${ivy.version}/ivy-${ivy.version}.jar" dest="${lib.dir}/ivy/ivy-${ivy.version}.jar" usetimestamp="true"/>
    </target>

    <!-- =========================================================================================================== -->
    <target name="install-ivy" unless="ivy.installed">
        <available file="${lib.dir}/ivy/ivy-${ivy.version}.jar" property="ivy.available"/>
        <antcall target="download-ivy"/>
        <path id="ivy.lib.path">
            <fileset dir="${lib.dir}/ivy" includes="*.jar"/>
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
        <property name="ivy.installed" value="true"/>
    </target>

    <!-- =========================================================================================================== -->
    <target name="install-findbugs" unless="findbugs.installed">
        <!-- unzips findbugs into the test directory. -->
        <unzip dest="${build.dir}/findbugs">
            <fileset dir="${lib.main.testtime.dir}">
                <include name="findbugs-*.zip"/>
            </fileset>
            <!-- This strips out the findbugs-version directory which
                 is contained within the zip archive. -->
            <mapper type="regexp" from="^findbugs-[0-9]+\.[0-9]+\.[0-9]+(-rc[0-9])?/(.*)$$" to="\2"/>
        </unzip>
        <!-- This works around an ironic bug in findbugs ... -->
        <mkdir dir="${build.dir}/findbugs/plugin"/>

        <!-- Now define the findbugs task. -->
        <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask">
            <classpath>
                <path>
                    <fileset dir="${build.dir}/findbugs/lib">
                        <include name="*.jar"/>
                    </fileset>
                </path>
            </classpath>
        </taskdef>
        <property name="findbugs.installed" value="true"/>
    </target>

    <!-- =========================================================================================================== -->
    <target name="install-cobertura" unless="cobertura.installed">
        <taskdef resource="tasks.properties">
            <classpath>
                <path>
                    <fileset dir="${lib.main.testtime.dir}">
                        <include name="cobertura-*.jar"/>
                        <include name="asm-tree-*.jar"/>
                        <include name="asm-*.jar"/>
                        <include name="jakarta-oro-*.jar"/>
                        <include name="log4j-*.jar"/>
                    </fileset>
                </path>
            </classpath>
        </taskdef>
        <property name="cobertura.installed" value="true"/>
    </target>

    <!-- =========================================================================================================== -->
    <target name="install-onejar" unless="onejar.installed">
        <taskdef name="one-jar" 
            classname="com.simontuffs.onejar.ant.OneJarTask"
            classpath="${lib.main.buildtime.dir}/one-jar-ant-task-0.97.jar" onerror="report"/>
        <property name="onejar.installed" value="true"/>
    </target>

</project>
